import psycopg
from aiogram import F, Router
from aiogram.types import CallbackQuery
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.filters import StateFilter
from aiogram.utils.markdown import hlink

from config import DATABASE_URL
from services.messages import get_workshops_with_user_id
from services.keyboards import (
    get_back_to_user_menu_kb,
    get_back_to_user_own_workshop_menu_kb,
    get_back_to_user_workshop_menu_kb,
)


class UserCheckOwnWorkshops(StatesGroup):
    choosing_workshop = State()


router = Router()


@router.callback_query(StateFilter(None), F.data == "CheckOwnWorkshop")
async def checking_for_workshops(callback: CallbackQuery, state: FSMContext):

    lessons = get_workshops_with_user_id(callback.from_user.id)

    if len(lessons) == 0:
        await callback.message.edit_text(
            text="üò• –í—ã –Ω–µ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∏ –Ω–∞ –æ–¥–Ω—É –º–∞—Å—Ç–µ—Ä—Å–∫—É—é", reply_markup=get_back_to_user_menu_kb()
        )
    else:

        await callback.message.edit_text(
            text="–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è <u>–Ω–æ–º–µ—Ä–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏</u> –∏–ª–∏ <u>—Å—Å—ã–ª–∫–∏ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</u> –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –º–∞—Å—Ç–µ—Ä—Å–∫—É—é",
            reply_markup=get_back_to_user_workshop_menu_kb(lessons),
        )
        await state.set_state(UserCheckOwnWorkshops.choosing_workshop)


@router.callback_query(UserCheckOwnWorkshops.choosing_workshop)
async def workshop_chosen(callback: CallbackQuery, state: FSMContext):

    sql_workshop_info = "SELECT * FROM workshops WHERE user_id=%s AND title=%s"
    sql_add_info = """SELECT * FROM workshops_schedule WHERE
                    title=%s AND format=%s AND date=%s AND hours=%s AND minutes=%s"""

    with psycopg.connect(DATABASE_URL) as conn:
        with conn.cursor() as cursor:
            workshop = cursor.execute(sql_workshop_info, [callback.from_user.id, callback.data]).fetchall()
            add_info = cursor.execute(
                sql_add_info, [workshop[0][1], workshop[0][2], workshop[0][3], workshop[0][4], workshop[0][5]]
            ).fetchall()
            conn.commit()

    if add_info[0][6][0] in "0123456789":
        await callback.message.edit_text(
            text=f"–¢—ã –∑–∞–ø–∏—Å–∞–Ω(–∞) –Ω–∞ –º–∞—Å—Ç–µ—Ä—Å–∫—É—é\nüß† –ù–∞–∑–≤–∞–Ω–∏–µ: <b>{workshop[0][1]}</b>\n\nüéØ –§–æ—Ä–º–∞—Ç: <b>{workshop[0][2]}</b>"
            + f"\nüìç –ê—É–¥–∏—Ç–æ—Ä–∏—è: <b>{add_info[0][6]}</b>\n\nüìÜ –î–∞—Ç–∞: <b>{workshop[0][3]}</b>\nüïë –í—Ä–µ–º—è: <b>{workshop[0][4]}:{workshop[0][5]}</b>",
            reply_markup=get_back_to_user_own_workshop_menu_kb(),
        )
    else:
        link = hlink("—Å—Å—ã–ª–∫–∞", add_info[0][6])
        await callback.message.edit_text(
            text=f"–¢—ã –∑–∞–ø–∏—Å–∞–Ω(–∞) –Ω–∞ –º–∞—Å—Ç–µ—Ä—Å–∫—É—é\nüß† –ù–∞–∑–≤–∞–Ω–∏–µ: <b>{workshop[0][1]}</b>\n\nüéØ –§–æ—Ä–º–∞—Ç: <b>{workshop[0][2]}</b>"
            + f"\nüíª –°—Å—ã–ª–∫–∞ –Ω–∞ Zoom: {link}\n\nüìÜ –î–∞—Ç–∞: <b>{workshop[0][3]}</b>\nüïë –í—Ä–µ–º—è: <b>{workshop[0][4]}:{workshop[0][5]}</b>",
            reply_markup=get_back_to_user_own_workshop_menu_kb(),
            disable_web_page_preview=True,
        )
    await state.clear()
