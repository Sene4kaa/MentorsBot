import gspread

import psycopg

from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import StateFilter
from django.conf import settings
from aiogram.utils.markdown import hlink

from bot.services.messages import (
    get_workshops_lower_35_list,
    get_workshops_format_list,
    get_deleting_workshops_list,
    get_workshops_dates_lower_35_list
)
from bot.services.keyboards import (
    get_back_to_user_menu_kb,
    get_user_list_cancel_workshop_sign_up,
    get_user_list_cancel_sign_up_workshop_practice_kb,
    get_user_added_workshop_practice_kb,
)

DATABASE_URL = settings.DATABASE_URL


class WorkshopSignUp(StatesGroup):
    signing_up_starting = State()
    choosing_workshop_practice = State()
    choosing_time = State()
    signing_up = State()


def next_available_row(worksheet):
    str_list = list(filter(None, worksheet.col_values(1)))
    return str(len(str_list) + 1)


router = Router()

available_workshop_practice_formats = ["Zoom", "–û—á–Ω–æ, –ö—Ä–æ–Ω–≤–µ—Ä–∫—Å–∫–∏–π", "–û—á–Ω–æ, –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞"]


@router.callback_query(StateFilter(None), F.data == "SignUpForWorkshopPractice")
async def start_signing_up(callback: CallbackQuery, state: FSMContext):

    lessons_list = get_workshops_lower_35_list(callback.from_user.id)

    if len(lessons_list) > 0:
        await callback.message.edit_text(
            text="–ö–∞–∫—É—é <i>–º–∞—Å—Ç–µ—Ä—Å–∫—É—é</i> —Ç–µ–±–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –ø–æ—Å–µ—Ç–∏—Ç—å?",
            reply_markup=get_user_list_cancel_workshop_sign_up(set(lessons_list)),
        )

        await state.set_state(WorkshopSignUp.choosing_workshop_practice)
    else:
        await callback.message.edit_text(
            text="üò™ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏ –º–∞—Å—Ç–µ—Ä—Å–∫–∏—Ö", reply_markup=get_back_to_user_menu_kb()
        )

        await state.clear()


@router.callback_query(F.data == "CancelToChoosingWorkshopPracticeOperation")
async def start_signing_up(callback: CallbackQuery, state: FSMContext):

    lessons_list = get_workshops_lower_35_list(callback.from_user.id)

    if len(lessons_list) > 0:
        await callback.message.edit_text(
            text="–ö–∞–∫—É—é <i>–º–∞—Å—Ç–µ—Ä—Å–∫—É—é</i> —Ç–µ–±–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã –ø–æ—Å–µ—Ç–∏—Ç—å?",
            reply_markup=get_user_list_cancel_workshop_sign_up(set(lessons_list)),
        )

        await state.set_state(WorkshopSignUp.choosing_workshop_practice)
    else:
        await callback.message.edit_text(
            text="üò™ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏ –º–∞—Å—Ç–µ—Ä—Å–∫–∏—Ö", reply_markup=get_back_to_user_menu_kb()
        )

        await state.clear()


@router.callback_query(F.data == "CancelToChoosingWorkshopDatetimeOperation")
async def time_chosen(callback: CallbackQuery, state: FSMContext):

    user_data = await state.get_data()

    if user_data['chosen_workshop_practice'] == "–û—Ü–µ–Ω–∏–≤–∞–Ω–∏–µ":
        link = hlink(
            "—Ç–∞–±–ª–∏—á–∫–µ",
             "https://docs.google.com/spreadsheets/d/1hkPSwhyr5K64YQ4e8KLZd2NoKr5F6lC4Gx8SB62wU_c/edit#gid=0"
        )
        await callback.message.edit_text(
            text=f"–¢—ã –≤—ã–±—Ä–∞–ª(–∞) –º–∞—Å—Ç–µ—Ä—Å–∫—É—é: <b>{user_data['chosen_workshop_practice']}</b>\n\n"
            + f"‚ùóÔ∏è <b>–î–ª—è –∑–∞–Ω—è—Ç–∏–π 2 –∏ 4 –∫—Ä–æ–º–µ –∑–∞–ø–∏—Å–∏ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∑–∞–ø–∏—Å—å –≤ {link} </b> ‚ùóÔ∏è\n\n"
            + "<u>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π</u>:\n\n"
            + "–ó–∞–Ω—è—Ç–∏–µ 2. 18 –∞–ø—Ä–µ–ª—è, 16:00-19:00, –æ–Ω–ª–∞–π–Ω\n"
            + "–ó–∞–Ω—è—Ç–∏–µ 2. 19 –∞–ø—Ä–µ–ª—è, 10:00-11:30, –æ–Ω–ª–∞–π–Ω\n"
            + "–ó–∞–Ω—è—Ç–∏–µ 3. 23 –∞–ø—Ä–µ–ª—è, 17:00-18:30, –æ–Ω–ª–∞–π–Ω\n"
            + "–ó–∞–Ω—è—Ç–∏–µ 4. 7 –º–∞—è, 16:00-19:00, –æ–Ω–ª–∞–π–Ω\n"
            + "–ó–∞–Ω—è—Ç–∏–µ 4. 8 –º–∞—è, 10:00-11:30, –æ–Ω–ª–∞–π–Ω\n\n"
            + "<u>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: —Å 15 –º–∞—è –ø–æ 15 –∏—é–Ω—è</u>",

            reply_markup=get_user_list_cancel_sign_up_workshop_practice_kb(
                set(get_workshops_dates_lower_35_list(user_data["chosen_workshop_practice"]))
            ),
        )
    elif user_data['chosen_workshop_practice'] == "–ü—Ä–∞–∫—Ç–∏–∫–∏ –ø–µ–¥.–æ–±—â–µ–Ω–∏—è –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è":
        await callback.message.edit_text(
            text=f"–¢—ã –≤—ã–±—Ä–∞–ª(–∞) –º–∞—Å—Ç–µ—Ä—Å–∫—É—é:\n<b>{user_data['chosen_workshop_practice']}</b>\n\n"
                 + "<u>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π</u>:\n\n"
                 + "1. –û—á–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥, 24.04, 10:00-11:30 - –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞ 9, –∞—É–¥. 1310\n"
                 + "2. –û—á–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥, 26.04, 15:20-16:50 - –õ–æ–º–æ–Ω–æ—Å–æ–≤–∞ 9, –∞—É–¥. 1310\n\n"
                 + "–í—ã–±–µ—Ä–∏ –¥–∞—Ç—É –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –æ—á–Ω–æ–º —Ç—Ä–µ–Ω–∏–Ω–≥–µ.",

            reply_markup=get_user_list_cancel_sign_up_workshop_practice_kb(
                set(get_workshops_dates_lower_35_list(user_data["chosen_workshop_practice"]))
            ),
        )
    elif user_data['chosen_workshop_practice'] == "–î–∏–∑–∞–π–Ω —É—á–µ–±–Ω—ã—Ö –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π":
        await callback.message.edit_text(
            text=f"–¢—ã –≤—ã–±—Ä–∞–ª(–∞) –º–∞—Å—Ç–µ—Ä—Å–∫—É—é:\n<b>{user_data['chosen_workshop_practice']}</b>\n\n"
                 + "<u>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π</u>:\n\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 2. 19 –∞–ø—Ä–µ–ª—è 15:20 - 16:50, –æ–Ω–ª–∞–π–Ω\n\n",

            reply_markup=get_user_list_cancel_sign_up_workshop_practice_kb(
                set(get_workshops_dates_lower_35_list(user_data["chosen_workshop_practice"]))
            ),
        )
    elif user_data['chosen_workshop_practice'] == "–ê–¥–∞–ø—Ç–∞—Ü–∏—è —É—á.–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤":
        await callback.message.edit_text(
            text=f"–¢—ã –≤—ã–±—Ä–∞–ª(–∞) –º–∞—Å—Ç–µ—Ä—Å–∫—É—é:\n<b>{user_data['chosen_workshop_practice']}</b>\n\n"
                 + "<u>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π</u>:\n\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 3. 19 –∞–ø—Ä–µ–ª—è 11.40-13.10, –æ–Ω–ª–∞–π–Ω\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 4. 22 –∞–ø—Ä–µ–ª—è 15.20 - 16.50, –æ–Ω–ª–∞–π–Ω\n\n",

            reply_markup=get_user_list_cancel_sign_up_workshop_practice_kb(
                set(get_workshops_dates_lower_35_list(user_data["chosen_workshop_practice"]))
            ),
        )
    elif user_data['chosen_workshop_practice'] == "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–Ω—è—Ç–∏—è":
        await callback.message.edit_text(
            text=f"–¢—ã –≤—ã–±—Ä–∞–ª(–∞) –º–∞—Å—Ç–µ—Ä—Å–∫—É—é:\n<b>{user_data['chosen_workshop_practice']}</b>\n\n"
                 + "<u>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π</u>:\n\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 1. 15 –∞–ø—Ä–µ–ª—è 17:00-18:30, –æ—á–Ω–æ\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 2. 22 –∞–ø—Ä–µ–ª—è 17:00-18:30, –æ—á–Ω–æ\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 3. 29 –∞–ø—Ä–µ–ª—è 17:00-18:30, –æ—á–Ω–æ\n\n"
                 + "<u>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å —Ä–∞–∑–±–æ—Ä–æ–º –ø–ª–∞–Ω–∞ –∑–∞–Ω—è—Ç–∏—è: —Å 7 –∞–ø—Ä–µ–ª—è –ø–æ 15 –∞–ø—Ä–µ–ª—è</u>",

            reply_markup=get_user_list_cancel_sign_up_workshop_practice_kb(
                set(get_workshops_dates_lower_35_list(user_data["chosen_workshop_practice"]))
            ),
        )
    await state.set_state(WorkshopSignUp.choosing_time)


@router.callback_query(WorkshopSignUp.choosing_workshop_practice)
async def workshop_practice_chosen(callback: CallbackQuery, state: FSMContext):

    await state.update_data(chosen_workshop_practice=callback.data)
    user_data = await state.get_data()

    if user_data['chosen_workshop_practice'] == "–û—Ü–µ–Ω–∏–≤–∞–Ω–∏–µ":
        link = hlink(
            "—Ç–∞–±–ª–∏—á–∫–µ",
            "https://docs.google.com/spreadsheets/d/1hkPSwhyr5K64YQ4e8KLZd2NoKr5F6lC4Gx8SB62wU_c/edit#gid=0"
        )
        await callback.message.edit_text(
            text=f"–¢—ã –≤—ã–±—Ä–∞–ª(–∞) –º–∞—Å—Ç–µ—Ä—Å–∫—É—é: <b>{user_data['chosen_workshop_practice']}</b>\n\n"
                 + f"‚ùóÔ∏è<b>–î–ª—è –∑–∞–Ω—è—Ç–∏–π 2 –∏ 4 –∫—Ä–æ–º–µ –∑–∞–ø–∏—Å–∏ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∑–∞–ø–∏—Å—å –≤ {link} </b>‚ùóÔ∏è\n\n"
                 + "<u>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π</u>:\n\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 2. 18 –∞–ø—Ä–µ–ª—è, 16:00-19:00, –æ–Ω–ª–∞–π–Ω\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 2. 19 –∞–ø—Ä–µ–ª—è, 10:00-11:30, –æ–Ω–ª–∞–π–Ω\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 3. 23 –∞–ø—Ä–µ–ª—è, 17:00-18:30, –æ–Ω–ª–∞–π–Ω\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 4. 7 –º–∞—è, 16:00-19:00, –æ–Ω–ª–∞–π–Ω\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 4. 8 –º–∞—è, 10:00-11:30, –æ–Ω–ª–∞–π–Ω\n\n"
                 + "<u>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É: —Å 15 –º–∞—è –ø–æ 15 –∏—é–Ω—è</u>",

            disable_web_page_preview=True,
            reply_markup=get_user_list_cancel_sign_up_workshop_practice_kb(
                set(get_workshops_dates_lower_35_list(user_data["chosen_workshop_practice"]))
            ),
        )
    elif user_data['chosen_workshop_practice'] == "–ü—Ä–∞–∫—Ç–∏–∫–∏ –ø–µ–¥.–æ–±—â–µ–Ω–∏—è –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—è":
        await callback.message.edit_text(
            text=f"–¢—ã –≤—ã–±—Ä–∞–ª(–∞) –º–∞—Å—Ç–µ—Ä—Å–∫—É—é:\n<b>{user_data['chosen_workshop_practice']}</b>\n\n"
                 + "<u>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π</u>:\n\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 2. 16 –∞–ø—Ä–µ–ª—è 15:20-16:50, –æ–Ω–ª–∞–π–Ω\n"
                 + "–û—á–Ω—ã–π —Ç—Ä–µ–Ω–∏–Ω–≥.  C 22 –∞–ø—Ä–µ–ª—è –ø–æ 27 –∞–ø—Ä–µ–ª—è, –¥–∞—Ç–∞ –ø–æ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—é —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏",

            reply_markup=get_user_list_cancel_sign_up_workshop_practice_kb(
                set(get_workshops_dates_lower_35_list(user_data["chosen_workshop_practice"]))
            ),
        )
    elif user_data['chosen_workshop_practice'] == "–î–∏–∑–∞–π–Ω —É—á–µ–±–Ω—ã—Ö –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π":
        await callback.message.edit_text(
            text=f"–¢—ã –≤—ã–±—Ä–∞–ª(–∞) –º–∞—Å—Ç–µ—Ä—Å–∫—É—é:\n<b>{user_data['chosen_workshop_practice']}</b>\n\n"
                 + "<u>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π</u>:\n\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 2. 19 –∞–ø—Ä–µ–ª—è 15:20 - 16:50, –æ–Ω–ª–∞–π–Ω",

            reply_markup=get_user_list_cancel_sign_up_workshop_practice_kb(
                set(get_workshops_dates_lower_35_list(user_data["chosen_workshop_practice"]))
            ),
        )
    elif user_data['chosen_workshop_practice'] == "–ê–¥–∞–ø—Ç–∞—Ü–∏—è —É—á.–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤":
        await callback.message.edit_text(
            text=f"–¢—ã –≤—ã–±—Ä–∞–ª(–∞) –º–∞—Å—Ç–µ—Ä—Å–∫—É—é:\n<b>{user_data['chosen_workshop_practice']}</b>\n\n"
                 + "<u>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π</u>:\n\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 3. 19 –∞–ø—Ä–µ–ª—è 11.40-13.10, –æ–Ω–ª–∞–π–Ω\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 4. 22 –∞–ø—Ä–µ–ª—è 15.20 - 16.50, –æ–Ω–ª–∞–π–Ω\n\n",

            reply_markup=get_user_list_cancel_sign_up_workshop_practice_kb(
                set(get_workshops_dates_lower_35_list(user_data["chosen_workshop_practice"]))
            ),
        )
    elif user_data['chosen_workshop_practice'] == "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–Ω—è—Ç–∏—è":
        await callback.message.edit_text(
            text=f"–¢—ã –≤—ã–±—Ä–∞–ª(–∞) –º–∞—Å—Ç–µ—Ä—Å–∫—É—é:\n<b>{user_data['chosen_workshop_practice']}</b>\n\n"
                 + "<u>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞—Å—Ç–µ—Ä—Å–∫–æ–π</u>:\n\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 1. 15 –∞–ø—Ä–µ–ª—è 17:00-18:30, –æ—á–Ω–æ\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 2. 22 –∞–ø—Ä–µ–ª—è 17:00-18:30, –æ—á–Ω–æ\n"
                 + "–ó–∞–Ω—è—Ç–∏–µ 3. 29 –∞–ø—Ä–µ–ª—è 17:00-18:30, –æ—á–Ω–æ\n\n"
                 + "<u>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å —Ä–∞–∑–±–æ—Ä–æ–º –ø–ª–∞–Ω–∞ –∑–∞–Ω—è—Ç–∏—è: —Å 7 –∞–ø—Ä–µ–ª—è –ø–æ 15 –∞–ø—Ä–µ–ª—è</u>",

            reply_markup=get_user_list_cancel_sign_up_workshop_practice_kb(
                set(get_workshops_dates_lower_35_list(user_data["chosen_workshop_practice"]))
            ),
        )

    await state.set_state(WorkshopSignUp.choosing_time)


@router.callback_query(WorkshopSignUp.choosing_time)
async def time_chosen(callback: CallbackQuery, state: FSMContext):

    await state.update_data(chosen_time=callback.data)
    user_data = await state.get_data()

    with psycopg.connect(DATABASE_URL) as conn:
        with conn.cursor() as cursor:
            workshop_format = cursor.execute("""SELECT format FROM workshops_schedule WHERE title=%s AND date=%s""",
                                             [user_data["chosen_workshop_practice"],
                                              user_data["chosen_time"].split(', ')[0] + ', ' +
                                              user_data["chosen_time"].split(', ')[1]]).fetchall()[0][0]
            conn.commit()

    await state.update_data(chosen_format=workshop_format)

    if workshop_format == "Zoom":
        await callback.message.edit_text(
            text=(
                    f"–¢—ã —Ö–æ—á–µ—à—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–∞—Å—Ç–µ—Ä—Å–∫—É—é\n\n"
                    + f"üß† –ü—Ä–µ–¥–º–µ—Ç: <b>{user_data['chosen_workshop_practice']}</b>\n"
                    + f"üìÜ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: <b>{user_data['chosen_time']}</b>.\n\n"
                    + f"‚ùóÔ∏è –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ ‚ùóÔ∏è\n–§–æ—Ä–º–∞—Ç –∑–∞–Ω—è—Ç–∏—è: <b>{workshop_format}</b>\n"
                    + f"<u>–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–Ω–ª–∞–π–Ω-–∑–∞–Ω—è—Ç–∏–µ –±—ã–ª–æ –∑–∞—Å—á–∏—Ç–∞–Ω–æ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–∫–ª—é—á–µ–Ω–∏–µ –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞ –∏ –≤–µ–±-–∫–∞–º–µ—Ä—ã</u>"
                    + "\n<i>–ù–∞ –∫–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ!</i>"
                    + "\n\n<u>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏ –∑–∞–ø–∏—Å—å</u>.\nP.S. –ú–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."
            ),
            reply_markup=get_user_added_workshop_practice_kb(),
        )
    else:
        await callback.message.edit_text(
            text=(
                    f"–¢—ã —Ö–æ—á–µ—à—å –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–∞—Å—Ç–µ—Ä—Å–∫—É—é\n\n"
                    + f"üß† –ü—Ä–µ–¥–º–µ—Ç: <b>{user_data['chosen_workshop_practice']}</b>\n"
                    + f"üìÜ –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è: <b>{user_data['chosen_time']}</b>.\n\n"
                    + f"‚ùóÔ∏è –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ ‚ùóÔ∏è\n–§–æ—Ä–º–∞—Ç –∑–∞–Ω—è—Ç–∏—è: <b>{workshop_format}</b>"
                    + "\n<i>–ù–∞ –∫–∞–∂–¥–æ–µ –Ω–æ–≤–æ–µ –∑–∞–Ω—è—Ç–∏–µ –Ω—É–∂–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ!</i>"
                    + "\n\n<u>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏ –∑–∞–ø–∏—Å—å</u>.\n–ú–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."
            ),
            reply_markup=get_user_added_workshop_practice_kb(),
        )
    await state.set_state(WorkshopSignUp.signing_up)


@router.callback_query(WorkshopSignUp.signing_up)
async def ending_adding_workshop_practice(callback: CallbackQuery, state: FSMContext):

    user_data = await state.get_data()

    sql_workshop_practices = """INSERT INTO workshops (user_id, title, format, date, hours, minutes)
             VALUES (%s, %s, %s, %s, %s, %s)"""
    sql_schedule = """UPDATE workshops_schedule 
            SET users_number = users_number + 1 
            WHERE title=%s AND format=%s AND date=%s AND hours=%s AND minutes=%s"""

    with psycopg.connect(DATABASE_URL) as conn:
        with conn.cursor() as cursor:

            cursor.execute(
                sql_workshop_practices,
                [
                    callback.from_user.id,
                    user_data["chosen_workshop_practice"],
                    user_data["chosen_format"],
                    user_data["chosen_time"].split(", ")[0] + ", " + user_data["chosen_time"].split(", ")[1],
                    user_data["chosen_time"].split(", ")[2][:2],
                    user_data["chosen_time"].split(", ")[2][3:],
                ],
            )
            cursor.execute(
               sql_schedule,
                [
                    user_data["chosen_workshop_practice"],
                    user_data["chosen_format"],
                    user_data["chosen_time"].split(", ")[0] + ", " + user_data["chosen_time"].split(", ")[1],
                    user_data["chosen_time"].split(", ")[2][:2],
                    user_data["chosen_time"].split(", ")[2][3:],
                ],
            )

            user_name = cursor.execute(
                "SELECT surname, name FROM users WHERE user_id=%s", [callback.from_user.id]
            ).fetchall()

            conn.commit()
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –≤ –≥—É–≥–ª-—Ç–∞–±–ª–∏—Ü—É

    gc = gspread.service_account(filename="test.json")
    sh = gc.open_by_key(settings.SAMPLE_SPREADSHEET_ID)
    worksheet_sign_up = sh.worksheet("SignUpWorkshops")
    next_row_id = str(int(next_available_row(worksheet_sign_up)) + 1)

    if (worksheet_sign_up.cell(int(next_row_id) - 1, 1).value != user_data["chosen_workshop_practice"]
        or worksheet_sign_up.cell(int(next_row_id) - 1, 2).value != user_name[0][0]
        or worksheet_sign_up.cell(int(next_row_id) - 1, 3).value != user_name[0][1]
        or worksheet_sign_up.cell(int(next_row_id) - 1, 4).value != user_data["chosen_time"].split(", ")[0] + ", " +
            user_data["chosen_time"].split(", ")[1]
        or worksheet_sign_up.cell(int(next_row_id) - 1, 5).value != user_data["chosen_time"].split(", ")[2]
        or worksheet_sign_up.cell(int(next_row_id) - 1, 6).value != "–ó–∞–ø–∏—Å–∞–Ω(–∞)"):

        worksheet_sign_up.update_acell(f"A{next_row_id}", user_data["chosen_workshop_practice"])
        worksheet_sign_up.update_acell(f"B{next_row_id}", user_name[0][0])
        worksheet_sign_up.update_acell(f"C{next_row_id}", user_name[0][1])
        worksheet_sign_up.update_acell(
            f"D{next_row_id}", user_data["chosen_time"].split(", ")[0] + ", " + user_data["chosen_time"].split(", ")[1])
        worksheet_sign_up.update_acell(f"E{next_row_id}", user_data["chosen_time"].split(", ")[2])
        worksheet_sign_up.update_acell(f"F{next_row_id}", "–ó–∞–ø–∏—Å–∞–Ω(–∞)")

    await callback.message.edit_text(
        text=(
            "–ó–∞–ø–∏—Å—å –Ω–∞ –º–∞—Å—Ç–µ—Ä—Å–∫—É—é <b>–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞</b>!\n"
            "–°—Å—ã–ª–∫—É –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–ª–∏ –Ω–æ–º–µ—Ä –∞—É–¥–∏—Ç–æ—Ä–∏–∏ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ <i>–ú–æ–∏ –∑–∞–Ω—è—Ç–∏—è</i>"
        ),
        reply_markup=get_back_to_user_menu_kb(),
    )
    await state.clear()
